<?php

/**
 * @file
 * Module file for Commerce Store Domain.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;

/**
 * Implements hook_entity_base_field_info().
 */
function commerce_store_domain_entity_base_field_info(EntityTypeInterface $entity_type) {
  if ($entity_type->id() === 'commerce_store') {
    $module_handler = \Drupal::moduleHandler();

    $fields['domain'] = BaseFieldDefinition::create('string')
      ->setLabel(t('Domain'))
      ->setDisplayOptions('form', [
        'type' => 'string_textfield',
        'weight' => 2,
      ])
      ->setCardinality(BaseFieldDefinition::CARDINALITY_UNLIMITED)
      ->setDisplayConfigurable('view', FALSE)
      ->setDisplayConfigurable('form', TRUE);

    if ($module_handler->moduleExists('domain')) {
      $fields['domain']->setDisplayOptions('form', ['region' => 'hidden']);
      $fields['domain_entity'] = BaseFieldDefinition::create('entity_reference')
        ->setLabel(t('Domain'))
        ->setCardinality(BaseFieldDefinition::CARDINALITY_UNLIMITED)
        ->setSetting('target_type', 'domain')
        ->setDisplayOptions('form', [
          'type' => 'entity_reference_autocomplete',
          'weight' => 2,
          'settings' => [
            'match_operator' => 'CONTAINS',
            'size' => '60',
            'autocomplete_type' => 'tags',
            'placeholder' => '',
          ],
        ])
        ->setDisplayConfigurable('view', FALSE)
        ->setDisplayConfigurable('form', TRUE);
    }

    return $fields;
  }
}

/**
 * Implements hook_modules_installed().
 */
function commerce_store_domain_modules_installed($modules) {
  if (in_array('domain', $modules)) {
    $definition_update_manager = \Drupal::entityDefinitionUpdateManager();
    $field_definition = BaseFieldDefinition::create('entity_reference')
      ->setLabel(t('Domain'))
      ->setCardinality(BaseFieldDefinition::CARDINALITY_UNLIMITED)
      ->setSetting('target_type', 'domain')
      ->setDisplayOptions('form', [
        'type' => 'entity_reference_autocomplete',
        'settings' => [
          'match_operator' => 'CONTAINS',
          'size' => '60',
          'placeholder' => '',
        ],
      ])
      ->setDisplayConfigurable('view', FALSE)
      ->setDisplayConfigurable('form', TRUE);

    $definition_update_manager->installFieldStorageDefinition(
      'domain_entity',
      'commerce_store',
      'commerce_store_domain',
      $field_definition
    );
  }
}

/**
 * Implements hook_modules_uninstalled().
 */
function commerce_store_domain_modules_uninstalled($modules) {
  if (in_array('domain', $modules)) {
    $store_storage = \Drupal::entityTypeManager()->getStorage('commerce_store');
    /** @var \Drupal\commerce_store\Entity\StoreInterface $store */
    foreach ($store_storage->loadMultiple() as $store) {
      $store->get('domain_entity')->setValue(NULL);
      $store->save();
    }

    $definition_update_manager = \Drupal::entityDefinitionUpdateManager();
    $field_definition = $definition_update_manager->getFieldStorageDefinition('domain_entity', 'commerce_store');
    $definition_update_manager->uninstallFieldStorageDefinition($field_definition);
  }
}
